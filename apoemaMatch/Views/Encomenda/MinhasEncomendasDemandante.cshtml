@using apoemaMatch.Data.Enums
@using apoemaMatch.Data.ViewModels
@model IEnumerable<EncomendaViewModel>

@{
    ViewData["Title"] = "Lista de Encomendas";
}
<h2>Lista de Encomendas</h2>

@if (Model is not null && Model.Count() == 0)
{
    <h4>Ainda não foi cadastrada nenhuma encomenda</h4>
}

@if (User.Identity.IsAuthenticated && User.IsInRole("Demandante"))
{
    <div class="row justify-content-end">
        <div class="col-md-4 col-xs-6 d-inline-flex justify-content-end mb-3">
            <a class="btn btn-outline-primary my-2 my-sm-0" asp-controller="Encomenda" asp-action="Cadastrar">
                Criar nova encomenda
            </a>
        </div>
    </div>
}

<div class="row">
    @if (Model is not null)
    {
        @foreach (var item in Model)
        {
            <div class="col-md-4 col-xs-6 border-primary mb-3">
                <div class="card mb-3" style="max-width: 540px;">
                    <div class="row g-0">
                        <div class="col-md-12">
                            <div class="card-header text-white cor-apoema">
                                <p class="card-text">
                                    <h5 class="card-title">
                                        Encomenda @item.Id
                                    </h5>
                                </p>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="card-body">
                                <p class="card-text"><b>Título da encomenda: </b>@item.Titulo</p>
                                <p class="card-text"><b>Tipo da encomenda: </b>@Extensions.GetEnumDisplayName((EnumTipoEncomenda)item.TipoEncomenda)</p>
                                <p class="card-text">
                                    <b>Possui chamada: </b>
                                    @if (item.PossuiChamada)
                                    {
                                        <span>Sim</span>
                                    }
                                    else
                                    {
                                        <span>Não</span>
                                    }
                                </p>
                                <p class="card-text ">
                                    <b>Status: </b>
                                    @switch (item.StatusEncomenda)
                                    {
                                        case EnumStatusEncomenda.AnalisandoEncomenda:
                                            <span class="badge bg-primary text-white">@Extensions.GetEnumDisplayName((EnumStatusEncomenda)item.StatusEncomenda)</span>
                                            break;
                                        case EnumStatusEncomenda.Recusada:
                                            <span class="badge bg-danger text-white">@Extensions.GetEnumDisplayName((EnumStatusEncomenda)item.StatusEncomenda)</span>
                                            break;
                                        case EnumStatusEncomenda.Aberta:
                                            <span class="badge bg-success text-white">@Extensions.GetEnumDisplayName((EnumStatusEncomenda)item.StatusEncomenda)</span>
                                            break;
                                        case EnumStatusEncomenda.AguardandoAnaliseChamada:
                                            <span class="badge bg-warning text-white">@Extensions.GetEnumDisplayName((EnumStatusEncomenda)item.StatusEncomenda)</span>
                                            break;
                                        case EnumStatusEncomenda.Finalizada:
                                            <span class="badge bg-danger text-white">@Extensions.GetEnumDisplayName((EnumStatusEncomenda)item.StatusEncomenda)</span>
                                            break;
                                    }
                                </p>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="card-footer ">
                                <p class="card-text">
                                    <a class="btn btn-danger text-white" data-toggle="modal" data-target="#staticBackdrop_@item.Id">
                                        <i class="bi bi-trash"></i>Excluir
                                    </a>
                                    @if (item.PossuiChamada)
                                    {
                                        <a class="btn btn-outline-primary float-right" asp-action="VisualizarPropostas" asp-route-id="@item.Id">
                                            <i class="bi bi-file-earmark-person"></i> Visualizar propostas
                                            @if (item.StatusEncomenda == EnumStatusEncomenda.Aberta || item.StatusEncomenda == EnumStatusEncomenda.AguardandoAnaliseChamada)
                                            {
                                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger text-white px-2" style="font-size: medium">
                                                    @ViewData[item.Id.ToString()]
                                                </span>
                                            }
                                        </a>
                                        @if (item.StatusEncomenda == EnumStatusEncomenda.Finalizada && item.IdSolucionador > 0 && string.IsNullOrEmpty(item.AvaliacaoSolucionarSelecionadoChamada))
                                        {
                                            <a class="btn btn-outline-primary float-right" data-toggle="modal" data-target="#staticBackdropAvaliacao_@item.Id">
                                                <i class="bi bi-arrow-right-circle-fill"></i> Avaliar solução
                                            </a>
                                        }
                                    }
                                    <a class="btn btn-outline-primary float-right" asp-action="Detalhes" asp-route-id="@item.Id">
                                        <i class="bi bi-eye-fill"></i> Detalhes
                                    </a>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="staticBackdrop_@item.Id" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel_@item.Id" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="staticBackdropLabel_@item.Id">Exclusão</h5>
                        </div>
                        <div class="modal-body">
                            Tem certeza que deseja excluir esse item?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancelar</button>
                            <a class="btn btn-primary" asp-action="Excluir" asp-route-id="@item.Id">Confirmar</a>
                        </div>
                    </div>
                </div>
            </div>

            <form asp-controller="Encomenda" asp-action="AvaliarSolucao" id="formAvaliarSolucao_@item.Id">
                <input type="hidden" id="item.@item.Id" name="item_@item.Id" value="@item.Id" />
                <div class="modal fade" id="staticBackdropAvaliacao_@item.Id" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabelAvaliacao_@item.Id" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="staticBackdropLabelAvaliacao_@item.Id">Faça aqui sua avaliação final da solução recebida</h5>
                            </div>
                            <div class="modal-body">
                                <div class="col-md-12">
                                    <label class="control-label">Dê uma nota (0 a 10)</label>
                                    <input onkeyup="valideNota(this)" type="number" id="@(nameof(item.NotaSolucionarSelecionadoChamada) + "." + item.Id)" name="@(nameof(item.NotaSolucionarSelecionadoChamada) + "_" + item.Id)" class="form-control" min="0" max="10" />
                                    <span id="@("span" + nameof(item.NotaSolucionarSelecionadoChamada) + "." + item.Id)" class="text-danger"></span>
                                </div>
                                <div class="col-md-12">
                                    <label class="control-label">Descreva sua avaliação</label>
                                    <textarea type="text" id="@(nameof(item.AvaliacaoSolucionarSelecionadoChamada) + "." + item.Id)" name="@(nameof(item.AvaliacaoSolucionarSelecionadoChamada) + "_" + item.Id)" class="form-control"></textarea>
                                    <span id="@("span" + nameof(item.AvaliacaoSolucionarSelecionadoChamada) + "." + item.Id)" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancelar</button>
                                <button type="button" onclick="enviarAvaliacaoFinal(@item.Id)" class="btn btn-primary" asp-action="AvaliarSolucao">Confirmar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        }
    }
</div>

<script>
    function valideNota(input) {
        if (input.value < 0 || !input.value) input.value = 0;
        else if (input.value > 10) input.value = 10;
    }

    function enviarAvaliacaoFinal(itemId) {
        let input = document.getElementById(`NotaSolucionarSelecionadoChamada.${itemId}`);
        let spanInput = document.getElementById(`spanNotaSolucionarSelecionadoChamada.${itemId}`);
        let inputEstaValido = informouValor(input);
        valideCampo(inputEstaValido, spanInput, "Nota é obrigatória");

        let textArea = document.getElementById(`AvaliacaoSolucionarSelecionadoChamada.${itemId}`);
        let spanTextArea = document.getElementById(`spanAvaliacaoSolucionarSelecionadoChamada.${itemId}`);
        let textAreaEstaValido = informouValor(textArea);
        valideCampo(textAreaEstaValido, spanTextArea, "Descrição é obrigatória");

        if (inputEstaValido && textAreaEstaValido) {
            document.getElementById(`formAvaliarSolucao_${itemId}`).submit();
        }

    }

    function informouValor(elemento) {
        return !!elemento.value;
    }

    function valideCampo(estaValido, span, textoValidacao) {
        if (!estaValido) {
            span.innerText = textoValidacao;
        }
        else {
            span.innerText = "";
        }
    }
</script>
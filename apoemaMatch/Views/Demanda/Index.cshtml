@using apoemaMatch.Data.Enums
@model IEnumerable<Demanda>

@{
    ViewData["Title"] = "Lista de Demandas";
}

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 col-xs-6 border-primary mb-3">
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row g-0">
                    <div class="col-md-12">
                        <div class="card-header text-white bg-info">
                            <p class="card-text">
                                <h5 class="card-title">
                                    @item.NomeEmpresa
                                    @*@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                        {
                                            <a class="text-white float-right" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                                        }*@
                                </h5>
                            </p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <img src="@item.ImagemURL" width="100%" alt="@item.NomeEmpresa">
                    </div>
                    <div class="col-md-6">
                        <div class="card-body">
                            <p class="card-text">@item.Descricao</p>
                            <p class="card-text"><b>Ramo de atuação: </b>@Extensions.GetEnumDisplayName((EnumRamoDeAtuacao)item.RamoDeAtuacao)</p>
                            <p class="card-text"><b>Segmento de mercado: </b>@Extensions.GetEnumDisplayName((EnumSegmentoDeMercado)item.SegmentoDeMercado)</p>
                            <p class="card-text"><b>Objetivo: </b>@Extensions.GetEnumDisplayName((EnumObjetivoParceria)item.ObjetivoParceria)</p>
                            <p class="card-text"><b>Área da solução buscada: </b>@Extensions.GetEnumDisplayName((EnumAreaSolucaoBuscada)item.AreaSolucaoBuscada)</p>
                            <p class="card-text ">
                                <b>Status: </b>
                                @if (item.DemandaAberta)
                                {
                                    <span class="badge bg-success text-white">ABERTA</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger text-white">FECHADA</span>
                                }
                            </p>

                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card-footer ">
                            <p class="card-text">
                                <a class="btn btn-outline-primary float-right" asp-action="Detalhes" asp-route-id="@item.Id">
                                    <i class="bi bi-eye-fill"></i> Detalhes
                                </a>
                                <a class="btn btn-outline-primary float-right" asp-action="VincularSolucionador" asp-route-id="@item.Id">
                                    <i class="bi bi-file-earmark-person"></i> Vincular Solucionador
                                </a>
                                @*<a class="btn btn-success text-white @((DateTime.Now > item.EndDate) ? "disabled" : "")"
           asp-controller="Orders"
           asp-action="AddItemToShoppingCart"
           asp-route-id="@item.Id">
            <i class="bi bi-cart-plus"></i> Add to Cart (Price @item.Price.ToString("c"))
        </a>*@
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@await Html.PartialAsync("_CadastrarItem", "Demanda")

